#! /usr/bin/env bash

readonly onto=$1
readonly commit_msg=$2

if [[ -z ${onto} ]] || [[ -z ${commit_msg} ]]; then
    echo "Usage: git thwomp <onto-commit> <commit-msg>"
    exit 1
fi

readonly thwompee=${3:-$(git rev-parse --abbrev-ref HEAD)}
fork_point=$(git merge-base --fork-point "${onto}" "${thwompee}")
if [[ -z "${fork_point}" ]]; then
    # Could not find a normal fork point; $thwompee must not have branched off $onto
    fork_point=$(git merge-base "${onto}" "${thwompee}")
    if [[ -z "${fork_point}" ]]; then
        echo "Could not find fork point between ${thwompee} and ${onto}"
        exit 2
    fi
fi

set -e

readonly count=$(($(git rev-list --count ${fork_point}..${thwompee}) - 1))

git switch --quiet "${onto}" --detach
git merge -n --squash "${thwompee}" > /dev/null
git commit --quiet -nm "${commit_msg}"
git branch --quiet -f "${thwompee}"
git switch --quiet "${thwompee}"
echo "Thwomped ${count} commits from ${twompee} onto ${onto}."

